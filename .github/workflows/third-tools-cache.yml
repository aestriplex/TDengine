name: Build TDengine and cache third-party tools

on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-20.04

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.18

      - name: Install dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt update -y
          sudo apt install -y \
            build-essential \
            cmake \
            gawk \
            libgeos-dev \
            libjansson-dev \
            liblzma-dev \
            libsnappy-dev \
            libssl-dev \
            libz-dev \
            pkg-config \
            zlib1g

      - name: Build and install TDengine
        run: |
          mkdir debug && cd debug
          cmake .. -DBUILD_TOOLS=true \
            -DBUILD_KEEPER=true \
            -DBUILD_HTTP=false \
            -DBUILD_TEST=true \
            -DBUILD_DEPENDENCY_TESTS=false
          make -j 4
          sudo make install
          which taosd
          which taosadapter
          which taoskeeper
      - name: Create cache directory
        run: mkdir -p build/cache/tools
      - name: Save Cache files
        run: |
          cp -r ${{ github.workspace }}/contrib build/cache/
          cp -r ${{ github.workspace }}/tools/taosadapter build/cache/tools/
      - name: Upload cache as artifact
        id: upload-artifact-cache
        uses: actions/upload-artifact@v4
        with:
          name: third-tools-build-cache
          path: build/cache/
          registry-type: generic
          overwrite: true
          retention-days: 7
      - name: Update orgerization variable 'TDENGINE_TOOLS_CACHE_ID'
        run: |
          response=$(curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.WORKFLOW_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/taosdata/actions/variables/TDENGINE_TOOLS_CACHE_ID \
            -d '{"name":"TDENGINE_TOOLS_CACHE_ID","value":${{ steps.upload-artifact-cache.outputs.artifact-id }},"visibility":"all"}')
          echo $response